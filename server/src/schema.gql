# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Budget {
  _id: String!

  """Amount by centavo"""
  amount: Float!

  """Created At"""
  createdAt: DateTime!

  """Budget name"""
  name: String!

  """Budget note"""
  note: String

  """Updated At"""
  updatedAt: DateTime!
}

enum Category {
  ESSENTIAL
  NON_ESSENTIAL
}

input CreateBudgetInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateLedgerInput {
  """Amount by centavo"""
  amount: Float! = 0

  """Ledger category"""
  category: Category!

  """Ledger Type"""
  ledgerType: LedgerType

  """Ledger name"""
  name: String!

  """Ledger note"""
  note: String

  """Periodical Type"""
  periodical: Periodical
}

input CreateUserInput {
  email: String!

  """Example field (placeholder)"""
  name: String
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Ledger {
  _id: String!

  """Amount by centavo's"""
  amount: Float!

  """Ledger category"""
  category: Category!

  """Created At"""
  createdAt: DateTime!

  """Ledger Type"""
  ledgerType: LedgerType

  """Ledger name"""
  name: String!

  """Periodical Type"""
  periodical: Periodical

  """Updated At"""
  updatedAt: DateTime!
}

enum LedgerType {
  EXPENSE
  INCOME
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createBudget(createBudgetInput: CreateBudgetInput!): Budget!
  createLedger(createLedgerInput: CreateLedgerInput!): Ledger!
  createUser(createUserInput: CreateUserInput!): User!
  login(loginUserInput: LoginUserInput!): User!
  removeBudget(id: String!): Budget!
  removeLedger(id: String!): Ledger!
  removeUser(id: String!): User!
  updateBudget(updateBudgetInput: UpdateBudgetInput!): Budget!
  updateLedger(updateLedgerInput: UpdateLedgerInput!): Ledger!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

enum Periodical {
  ANNUAL
  DAILY
  MONTHLY
  QUARTERLY
  WEEKLY
}

type Query {
  budget(id: String!): Budget!
  budgets: [Budget!]!
  ledger(id: String!): Ledger!
  ledgers: [Ledger!]!
  user: User!
  users: [User!]!
}

input UpdateBudgetInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: String!
}

input UpdateLedgerInput {
  """Amount by centavo"""
  amount: Float = 0

  """Ledger category"""
  category: Category
  id: String!

  """Ledger Type"""
  ledgerType: LedgerType

  """Ledger name"""
  name: String

  """Ledger note"""
  note: String

  """Periodical Type"""
  periodical: Periodical
}

input UpdateUserInput {
  email: String
  id: String!

  """Example field (placeholder)"""
  name: String
  password: String
}

type User {
  _id: String!

  """Created At"""
  createdAt: DateTime!
  email: String!

  """ledgers"""
  ledgers: [Ledger!]!
  name: String!

  """Updated At"""
  updatedAt: DateTime!
}